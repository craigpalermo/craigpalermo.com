{"version":3,"sources":["webpack:///./src/assets/moon.svg","webpack:///./node_modules/gatsby-plugin-dark-mode/index.js","webpack:///./src/assets/sun.svg","webpack:///./node_modules/gatsby-plugin-dark-mode/ThemeToggler.js","webpack:///./src/components/DarkMode.js","webpack:///./src/pages/index.js"],"names":["React","Moon","props","createElement","defaultProps","module","exports","default","_interopRequireDefault","require","__esModule","_ThemeToggler","ThemeToggler","Sun","_assertThisInitialized2","_inheritsLoose2","_defineProperty2","_react","_propTypes","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","theme","_proto","prototype","componentDidMount","_this2","setState","window","__theme","__onThemeChange","toggleTheme","__setPreferredTheme","render","children","state","Component","propTypes","func","isRequired","_default","DarkMode","title","style","position","top","right","padding","height","width","display","type","onChange","e","target","checked","BlogIndex","data","location","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","backgroundColor","color","transition","map","node","frontmatter","fields","slug","key","marginBottom","rhythm","boxShadow","to","date","pageQuery"],"mappings":"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","file":"component---src-pages-index-js-e6189f5d085b8a1d23f0.js","sourcesContent":["var React = require('react');\n\nfunction Moon (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M0 0h24v24H0z\",\"fill\":\"none\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M20 15.31L23.31 12 20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z\",\"key\":1})]);\n}\n\nMoon.defaultProps = {\"viewBox\":\"0 0 24 24\",\"fill\":\"black\",\"width\":\"18px\",\"height\":\"18px\"};\n\nmodule.exports = Moon;\n\nMoon.default = Moon;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\n\nvar _ThemeToggler = _interopRequireDefault(require(\"./ThemeToggler\"));\n\nexports.ThemeToggler = _ThemeToggler.default;","var React = require('react');\n\nfunction Sun (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M10 2c-1.82 0-3.53.5-5 1.35C7.99 5.08 10 8.3 10 12s-2.01 6.92-5 8.65C6.47 21.5 8.18 22 10 22c5.52 0 10-4.48 10-10S15.52 2 10 2z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M0 0h24v24H0z\",\"fill\":\"none\",\"key\":1})]);\n}\n\nSun.defaultProps = {\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"width\":\"24\"};\n\nmodule.exports = Sun;\n\nSun.default = Sun;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar ThemeToggler = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(ThemeToggler, _React$Component);\n\n  function ThemeToggler() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      theme: null\n    });\n    return _this;\n  }\n\n  var _proto = ThemeToggler.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this.setState({\n      theme: window.__theme\n    });\n\n    window.__onThemeChange = function () {\n      _this2.setState({\n        theme: window.__theme\n      });\n    };\n  };\n\n  _proto.toggleTheme = function toggleTheme(theme) {\n    window.__setPreferredTheme(theme);\n  };\n\n  _proto.render = function render() {\n    return _react.default.createElement(this.props.children, {\n      theme: this.state.theme,\n      toggleTheme: this.toggleTheme\n    });\n  };\n\n  return ThemeToggler;\n}(_react.default.Component);\n\nThemeToggler.propTypes = {\n  children: _propTypes.default.func.isRequired\n};\nvar _default = ThemeToggler;\nexports.default = _default;","import React from \"react\"\nimport { ThemeToggler } from \"gatsby-plugin-dark-mode\"\nimport Sun from \"../assets/sun.svg\"\nimport Moon from \"../assets/moon.svg\"\n\n// TODO auto-detect browser preference and set dark mode based on that\n\nexport default class DarkMode extends React.Component {\n  render() {\n    return (\n      // Use a library for button styling\n      <button\n        title={\"Toggle dark mode\"}\n        style={{\n          position: \"absolute\",\n          top: \"4px\",\n          right: \"4px\",\n          \"border-radius\": \"4px\",\n          padding: \"8px\",\n          height: \"42px\",\n          width: \"42px\",\n          \"padding-bottom\": \"0px\",\n        }}\n      >\n        <ThemeToggler>\n          {({ theme, toggleTheme }) => (\n            <label>\n              <input\n                style={{\n                  display: \"none\",\n                }}\n                type=\"checkbox\"\n                onChange={e => toggleTheme(e.target.checked ? \"dark\" : \"light\")}\n                checked={theme === \"dark\"}\n              />{\" \"}\n              {theme !== \"dark\" ? <Moon /> : <Sun />}\n            </label>\n          )}\n        </ThemeToggler>\n      </button>\n    )\n  }\n}\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport DarkMode from \"../components/DarkMode\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout\n      location={location}\n      title={siteTitle}\n      style={{\n        backgroundColor: \"var(--bg)\",\n        color: \"var(--textNormal)\",\n        transition: \"color 0.2s ease-out, background 0.2s ease-out\",\n        position: \"relative\",\n      }}\n    >\n      <SEO title=\"All posts\" />\n      <DarkMode />\n      <Bio />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            {/*<section>*/}\n            {/*  <p*/}\n            {/*    dangerouslySetInnerHTML={{*/}\n            {/*      __html: node.frontmatter.description || node.excerpt,*/}\n            {/*    }}*/}\n            {/*  />*/}\n            {/*</section>*/}\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}